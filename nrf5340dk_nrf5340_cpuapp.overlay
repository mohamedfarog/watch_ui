/*
 * Copyright (c) 2023 Jakob Krantz
 *
 * SPDX-License-Identifier: Apache-2.0
 */

 &pinctrl {
    // Set to I2C pins that the sensors are connected to
    i2c1_default: i2c1_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 2)>,
                <NRF_PSEL(TWIM_SCL, 1, 3)>;
        };
    };

    i2c1_sleep: i2c1_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 2)>,
                <NRF_PSEL(TWIM_SCL, 1, 3)>;
            low-power-enable;
        };
    };

    // Set to I2C pins that the touch screen is connected to
    i2c2_default: i2c2_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 2)>,
                <NRF_PSEL(TWIM_SCL, 1, 3)>;
        };
    };

    i2c2_sleep: i2c2_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 1, 2)>,
                <NRF_PSEL(TWIM_SCL, 1, 3)>;
            low-power-enable;
        };
    };

    // Set to the pins that the display is connected to
    spi4_default: spi4_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                <NRF_PSEL(SPIM_MOSI, 0, 4)>;
        };
    };

    spi4_sleep: spi4_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                <NRF_PSEL(SPIM_MOSI, 0, 4)>;
            low-power-enable;
        };
    };

};

/ {
    chosen {
        zephyr,display = &gc9a01;
        zephyr,keyboard-scan = &cst816s;
    };
    aliases {
        sw-top-right = &button1;
        sw-top-left = &button0;
        sw-bottom-right = &button3;
        sw-bottom-left = &button2;
        magn = &lis2mdl;
        kscan0 = &cst816s;
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
    sense-edge-mask = < 0xffffffff >;
};

&gpio1 {
    status = "okay";
};

&i2c1 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
    zephyr,concat-buf-size = <512>;
    pinctrl-0 = <&i2c1_default>;
    pinctrl-1 = <&i2c1_sleep>;
    pinctrl-names = "default", "sleep";


    bme688: bme688@76 {
        compatible = "bosch,bme680";
        reg = <0x76>;
    };

    lis2mdl: lis2mdl@1e {
        compatible = "st,lis2mdl";
        reg = <0x1e>;
        irq-gpios = <&gpio0 24 0>;
    };

    max30101@57 {
        status = "okay";
        compatible = "maxim,max30101";
        reg = <0x57>;
        //irq-gpios = <&gpio0 22 GPIO_ACTIVE_HIGH; // Not supported by Zephyr driver
    };

  
};

&i2c2 {
    compatible = "nordic,nrf-twim";
    status = "okay";
    clock-frequency = <I2C_BITRATE_FAST>;
    pinctrl-0 = <&i2c2_default>;
    pinctrl-1 = <&i2c2_sleep>;
    pinctrl-names = "default", "sleep";

    cst816s: cst816s@15 {
        compatible = "hynitron,cst816s";
        reg = <0x15>;
        irq-gpios = <&gpio1 0 GPIO_ACTIVE_LOW>;
        rst-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>;
    };
};

&spi4  {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi4_default>;
    pinctrl-1 = <&spi4_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;

    gc9a01: gc9a01@0 {
        compatible = "buydisplay,gc9a01";
        status = "okay";
        spi-max-frequency = <2000000>;
        reg = <0>;
        width = <240>;
        label = "buydisplay_gc9a01";
        height = <240>;
        bl-gpios = <&gpio1 6 GPIO_ACTIVE_HIGH>;
        reset-gpios = <&gpio0 25 GPIO_ACTIVE_HIGH>;
        dc-gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
        
    };
};